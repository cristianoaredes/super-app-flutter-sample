name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main, develop]

jobs:
  analyze_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
      - name: Install Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bootstrap
      - name: Generate code
        run: melos run build_runner
      - name: Analyze code
        run: melos run analyze
      - name: Run tests
        run: melos run test
      - name: Upload coverage
        uses: codecov/codecov-action@v3

  build_android:
    needs: analyze_and_test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
      - name: Install Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bootstrap
      - name: Generate code
        run: melos run build_runner
      - name: Build APK
        run: cd super_app && flutter build apk --release
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: super_app/build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    needs: analyze_and_test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
      - name: Install Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bootstrap
      - name: Generate code
        run: melos run build_runner
      - name: Build iOS
        run: cd super_app && flutter build ios --release --no-codesign
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: super_app/build/ios/iphoneos

  publish_packages:
    needs: [analyze_and_test, build_android, build_ios]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
      - name: Install Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bootstrap
      - name: Generate code
        run: melos run build_runner
      - name: Publish packages
        run: |
          # Configurar credenciais para o servidor pub privado
          mkdir -p ~/.pub-cache
          cat <<EOF > ~/.pub-cache/credentials.json
          {
            "https://seu-servidor-pub-privado.com": {
              "token": "${{ secrets.PUB_TOKEN }}"
            }
          }
          EOF
          melos run publish
